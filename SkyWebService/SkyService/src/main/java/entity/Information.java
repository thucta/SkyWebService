package entity;
// Generated Mar 24, 2017 7:27:14 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Information generated by hbm2java
 */
@XmlRootElement
@Entity
@Table(name = "INFORMATION")
//@XmlAccessorType(XmlAccessType.NONE)
public class Information {

	//@XmlAttribute
	private int id;
	//@XmlAttribute
	private Partner partner;
	//@XmlAttribute
	private String hotline;
	//@XmlAttribute
	private String name;
	//@XmlAttribute
	private Date timeopen;
	//@XmlAttribute
	private Date timeclose;
	//@XmlAttribute
	private String type;
	//@XmlAttribute
	private String intro;
	//@XmlAttribute
	private String number;
	//@XmlAttribute
	private String ward;
	//@XmlAttribute
	private String street;
//	@XmlAttribute
	private String district;
	//@XmlAttribute
	private String province;
	//@XmlAttribute
	private String urlpartner;
	private Set<Image> images = new HashSet<Image>(0);
	private Set<Users> userses = new HashSet<Users>(0);

	private Set<Service> services = new HashSet<Service>(0);

	
	private Set<Room> rooms = new HashSet<Room>(0);
	private Set<Food> foods = new HashSet<Food>(0);
	
	

	public Information() {
	}

	public Information(int id, Partner partner, String hotline, String name, Date timeopen, Date timeclose, String type,
			String intro, String number, String ward, String street, String district, String province) {
		this.id = id;
		this.partner = partner;
		this.hotline = hotline;
		this.name = name;
		this.timeopen = timeopen;
		this.timeclose = timeclose;
		this.type = type;
		this.intro = intro;
		this.number = number;
		this.ward = ward;
		this.street = street;
		this.district = district;
		this.province = province;
	}

	public Information(int id, Partner partner, String hotline, String name, Date timeopen, Date timeclose, String type,
			String intro, String number, String ward, String street, String district, String province,
			String urlpartner, Set<Image> images, Set<Users> userses, Set<Service> services,
			 Set<Room> rooms, Set<Food> foods) {
		this.id = id;
		this.partner = partner;
		this.hotline = hotline;
		this.name = name;
		this.timeopen = timeopen;
		this.timeclose = timeclose;
		this.type = type;
		this.intro = intro;
		this.number = number;
		this.ward = ward;
		this.street = street;
		this.district = district;
		this.province = province;
		this.urlpartner = urlpartner;
		this.images = images;
		this.userses = userses;
	
		this.services = services;
	
		
		this.rooms = rooms;
		this.foods = foods;
		
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "partner", nullable = false)

	public Partner getPartner() {
		return this.partner;
	}

	public void setPartner(Partner partner) {
		this.partner = partner;
	}

	@Column(name = "hotline", nullable = false)
	public String getHotline() {
		return this.hotline;
	}

	public void setHotline(String hotline) {
		this.hotline = hotline;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "timeopen", nullable = false, length = 13)
	public Date getTimeopen() {
		return this.timeopen;
	}

	public void setTimeopen(Date timeopen) {
		this.timeopen = timeopen;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "timeclose", nullable = false, length = 13)
	public Date getTimeclose() {
		return this.timeclose;
	}

	public void setTimeclose(Date timeclose) {
		this.timeclose = timeclose;
	}

	@Column(name = "type", nullable = false)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "intro", nullable = false)
	public String getIntro() {
		return this.intro;
	}

	public void setIntro(String intro) {
		this.intro = intro;
	}

	@Column(name = "number", nullable = false)
	public String getNumber() {
		return this.number;
	}

	public void setNumber(String number) {
		this.number = number;
	}

	@Column(name = "ward", nullable = false)
	public String getWard() {
		return this.ward;
	}

	public void setWard(String ward) {
		this.ward = ward;
	}

	@Column(name = "street", nullable = false)
	public String getStreet() {
		return this.street;
	}

	public void setStreet(String street) {
		this.street = street;
	}

	@Column(name = "district", nullable = false)
	public String getDistrict() {
		return this.district;
	}

	public void setDistrict(String district) {
		this.district = district;
	}

	@Column(name = "province", nullable = false)
	public String getProvince() {
		return this.province;
	}

	public void setProvince(String province) {
		this.province = province;
	}

	@Column(name = "urlpartner")
	public String getUrlpartner() {
		return this.urlpartner;
	}

	public void setUrlpartner(String urlpartner) {
		this.urlpartner = urlpartner;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "information")
	public Set<Image> getImages() {
		return this.images;
	}

	public void setImages(Set<Image> images) {
		this.images = images;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "RATING", joinColumns = {
			@JoinColumn(name = "infor", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "users", nullable = false, updatable = false) })
	public Set<Users> getUserses() {
		return this.userses;
	}

	public void setUserses(Set<Users> userses) {
		this.userses = userses;
	}

	
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "SERVICEINFOR", joinColumns = {
			@JoinColumn(name = "information", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "service", nullable = false, updatable = false) })
	public Set<Service> getServices() {
		return this.services;
	}

	public void setServices(Set<Service> services) {
		this.services = services;
	}

	


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "information")
	public Set<Room> getRooms() {
		return this.rooms;
	}

	public void setRooms(Set<Room> rooms) {
		this.rooms = rooms;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "information")
	public Set<Food> getFoods() {
		return this.foods;
	}

	public void setFoods(Set<Food> foods) {
		this.foods = foods;
	}

	


}
